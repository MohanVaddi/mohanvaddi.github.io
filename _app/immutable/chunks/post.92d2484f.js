import{S as T,i as $,s as g,k as E,q as b,l as h,m as _,r as k,h as o,n as i,b as y,G as F,K as q,u as I,H as v,a as A,y as M,a1 as O,e as S,c as x,z as P,a2 as z,A as G,g as K,d as N,B as U}from"./index.24b1ae6c.js";function j(r){let a,n,t,D;return{c(){a=E("button"),n=b(r[0]),this.h()},l(l){a=h(l,"BUTTON",{class:!0});var p=_(a);n=k(p,r[0]),p.forEach(o),this.h()},h(){i(a,"class","p-2 bg-primary")},m(l,p){y(l,a,p),F(a,n),t||(D=q(a,"click",r[1]),t=!0)},p(l,[p]){p&1&&I(n,l[0])},i:v,o:v,d(l){l&&o(a),t=!1,D()}}}function J(r,a,n){let{count:t}=a;const D=()=>n(0,t+=1);return r.$$set=l=>{"count"in l&&n(0,t=l.count)},[t,D]}class L extends T{constructor(a){super(),$(this,a,J,j,g,{count:0})}}function Q(r){let a,n,t,D,l,p,m,c,d,C,H=`<pre class="shiki dark-plus custom-pre" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #569CD6">type</span><span style="color: #D4D4D4"> </span><span style="color: #4EC9B0">DateStyle</span><span style="color: #D4D4D4"> = </span><span style="color: #4EC9B0">Intl</span><span style="color: #D4D4D4">.</span><span style="color: #4EC9B0">DateTimeFormatOptions</span><span style="color: #D4D4D4">[</span><span style="color: #CE9178">&#39;dateStyle&#39;</span><span style="color: #D4D4D4">];</span></span>
<span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">function</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">formatDate</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">date</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">string</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">dateStyle</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">DateStyle</span><span style="color: #D4D4D4"> = </span><span style="color: #CE9178">&#39;long&#39;</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">locales</span><span style="color: #D4D4D4"> = </span><span style="color: #CE9178">&#39;en&#39;</span><span style="color: #D4D4D4">) &#123;</span></span>
<span class="line"><span style="color: #D4D4D4">	</span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">formatter</span><span style="color: #D4D4D4"> = </span><span style="color: #569CD6">new</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">Intl</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">DateTimeFormat</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">locales</span><span style="color: #D4D4D4">, &#123; </span><span style="color: #9CDCFE">dateStyle</span><span style="color: #D4D4D4"> &#125;);</span></span>
<span class="line"><span style="color: #D4D4D4">	</span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">formatter</span><span style="color: #D4D4D4">.</span><span style="color: #DCDCAA">format</span><span style="color: #D4D4D4">(</span><span style="color: #569CD6">new</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">Date</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">date</span><span style="color: #D4D4D4">));</span></span>
<span class="line"><span style="color: #D4D4D4">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">customFormatDistance</span><span style="color: #D4D4D4"> = (</span><span style="color: #9CDCFE">date</span><span style="color: #D4D4D4">: </span><span style="color: #4EC9B0">Date</span><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> &#123;</span></span>
<span class="line"><span style="color: #D4D4D4">	</span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">formatDistance</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE">date</span><span style="color: #D4D4D4">, </span><span style="color: #569CD6">new</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">Date</span><span style="color: #D4D4D4">(), &#123;</span></span>
<span class="line"><span style="color: #D4D4D4">		</span><span style="color: #9CDCFE">addSuffix:</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">true</span></span>
<span class="line"><span style="color: #D4D4D4">	&#125;);</span></span>
<span class="line"><span style="color: #D4D4D4">&#125;;</span></span></code></pre>`,u,f;return c=new L({props:{count:1}}),{c(){a=E("h2"),n=E("a"),t=b("Example post"),D=A(),l=E("p"),p=b("The counter is rendered inside Markdown."),m=A(),M(c.$$.fragment),d=A(),C=new O(!1),u=S(),this.h()},l(s){a=h(s,"H2",{id:!0});var e=_(a);n=h(e,"A",{class:!0,"aria-hidden":!0,tabindex:!0,href:!0});var w=_(n);t=k(w,"Example post"),w.forEach(o),e.forEach(o),D=x(s),l=h(s,"P",{});var B=_(l);p=k(B,"The counter is rendered inside Markdown."),B.forEach(o),m=x(s),P(c.$$.fragment,s),d=x(s),C=z(s,!1),u=S(),this.h()},h(){i(n,"class","autolink-header"),i(n,"aria-hidden","true"),i(n,"tabindex","-1"),i(n,"href","#example-post"),i(a,"id","example-post"),C.a=u},m(s,e){y(s,a,e),F(a,n),F(n,t),y(s,D,e),y(s,l,e),F(l,p),y(s,m,e),G(c,s,e),y(s,d,e),C.m(H,s,e),y(s,u,e),f=!0},p:v,i(s){f||(K(c.$$.fragment,s),f=!0)},o(s){N(c.$$.fragment,s),f=!1},d(s){s&&o(a),s&&o(D),s&&o(l),s&&o(m),U(c,s),s&&o(d),s&&o(u),s&&C.d()}}}const V={title:"Example",image:"https://opengraph.githubassets.com/1/mohanvaddi/mohanvaddi.github.io",description:"First post.",date:"2023-4-14",categories:["sveltekit","svelte"],published:!0};class W extends T{constructor(a){super(),$(this,a,null,Q,g,{})}}export{W as default,V as metadata};
